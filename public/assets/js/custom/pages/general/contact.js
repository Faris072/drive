/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/pages/general/contact.js":
/*!******************************************************************!*\
  !*** ./resources/assets/core/js/custom/pages/general/contact.js ***!
  \******************************************************************/
/***/ (() => {

eval(" // Class definition\n\nvar KTContactApply = function () {\n  var submitButton;\n  var validator;\n  var form;\n  var selectedlocation; // Private functions\n\n  var initMap = function initMap(elementId) {\n    // Check if Leaflet is included\n    if (!L) {\n      return;\n    } // Define Map Location\n\n\n    var leaflet = L.map(elementId, {\n      center: [40.725, -73.985],\n      zoom: 30\n    }); // Init Leaflet Map. For more info check the plugin's documentation: https://leafletjs.com/\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(leaflet); // Set Geocoding\n\n    var geocodeService;\n\n    if (typeof L.esri.Geocoding === 'undefined') {\n      geocodeService = L.esri.geocodeService();\n    } else {\n      geocodeService = L.esri.Geocoding.geocodeService();\n    } // Define Marker Layer\n\n\n    var markerLayer = L.layerGroup().addTo(leaflet); // Set Custom SVG icon marker\n\n    var leafletIcon = L.divIcon({\n      html: \"<span class=\\\"svg-icon svg-icon-primary shadow svg-icon-3x\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\"><g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><rect x=\\\"0\\\" y=\\\"24\\\" width=\\\"24\\\" height=\\\"0\\\"/><path d=\\\"M5,10.5 C5,6 8,3 12.5,3 C17,3 20,6.75 20,10.5 C20,12.8325623 17.8236613,16.03566 13.470984,20.1092932 C12.9154018,20.6292577 12.0585054,20.6508331 11.4774555,20.1594925 C7.15915182,16.5078313 5,13.2880005 5,10.5 Z M12.5,12 C13.8807119,12 15,10.8807119 15,9.5 C15,8.11928813 13.8807119,7 12.5,7 C11.1192881,7 10,8.11928813 10,9.5 C10,10.8807119 11.1192881,12 12.5,12 Z\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"/></g></svg></span>\",\n      bgPos: [10, 10],\n      iconAnchor: [20, 37],\n      popupAnchor: [0, -37],\n      className: 'leaflet-marker'\n    }); // Show current address\n\n    L.marker([40.724716, -73.984789], {\n      icon: leafletIcon\n    }).addTo(markerLayer).bindPopup('430 E 6th St, New York, 10009.', {\n      closeButton: false\n    }).openPopup(); // Map onClick Action\n\n    leaflet.on('click', function (e) {\n      geocodeService.reverse().latlng(e.latlng).run(function (error, result) {\n        if (error) {\n          return;\n        }\n\n        markerLayer.clearLayers();\n        selectedlocation = result.address.Match_addr;\n        L.marker(result.latlng, {\n          icon: leafletIcon\n        }).addTo(markerLayer).bindPopup(result.address.Match_addr, {\n          closeButton: false\n        }).openPopup(); // Show popup confirmation. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n\n        Swal.fire({\n          html: 'Your selected - <b>\"' + selectedlocation + ' - ' + result.latlng + '\"</b>.',\n          icon: \"success\",\n          buttonsStyling: false,\n          confirmButtonText: \"Ok, got it!\",\n          customClass: {\n            confirmButton: \"btn btn-primary\"\n          }\n        }).then(function (result) {// Confirmed\n        });\n      });\n    });\n  }; // Init form inputs\n\n\n  var initForm = function initForm() {\n    // Team assign. For more info, plase visit the official plugin site: https://select2.org/\n    $(form.querySelector('[name=\"position\"]')).on('change', function () {\n      // Revalidate the field when an option is chosen\n      validator.revalidateField('position');\n    });\n  }; // Handle form validation and submittion\n\n\n  var handleForm = function handleForm() {\n    // Stepper custom navigation\n    // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n    validator = FormValidation.formValidation(form, {\n      fields: {\n        'name': {\n          validators: {\n            notEmpty: {\n              message: 'Name is required'\n            }\n          }\n        },\n        'email': {\n          validators: {\n            notEmpty: {\n              message: 'Email address is required'\n            },\n            emailAddress: {\n              message: 'The value is not a valid email address'\n            }\n          }\n        },\n        'message': {\n          validators: {\n            notEmpty: {\n              message: 'Message is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    }); // Action buttons\n\n    submitButton.addEventListener('click', function (e) {\n      e.preventDefault(); // Validate form before submit\n\n      if (validator) {\n        validator.validate().then(function (status) {\n          console.log('validated!');\n\n          if (status == 'Valid') {\n            submitButton.setAttribute('data-kt-indicator', 'on'); // Disable button to avoid multiple click \n\n            submitButton.disabled = true;\n            setTimeout(function () {\n              submitButton.removeAttribute('data-kt-indicator'); // Enable button\n\n              submitButton.disabled = false;\n              Swal.fire({\n                text: \"Form has been successfully submitted!\",\n                icon: \"success\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                  confirmButton: \"btn btn-primary\"\n                }\n              }).then(function (result) {\n                if (result.isConfirmed) {//form.submit();\n                }\n              }); //form.submit(); // Submit form\n            }, 2000);\n          } else {\n            // Scroll top\n            // Show error popuo. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n            Swal.fire({\n              text: \"Sorry, looks like there are some errors detected, please try again.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn btn-primary\"\n              }\n            }).then(function (result) {\n              KTUtil.scrollTop();\n            });\n          }\n        });\n      }\n    });\n  };\n\n  return {\n    // Public functions\n    init: function init() {\n      // Elements\n      form = document.querySelector('#kt_contact_form');\n      submitButton = document.getElementById('kt_contact_submit_button');\n      initForm();\n      handleForm();\n      initMap('kt_contact_map');\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTContactApply.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/pages/general/contact.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/pages/general/contact.js"]();
/******/ 	
/******/ })()
;