/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/projects/settings/settings.js":
/*!****************************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/projects/settings/settings.js ***!
  \****************************************************************************/
/***/ (() => {

eval(" // Class definition\n\nvar KTProjectSettings = function () {\n  // Private functions\n  var handleForm = function handleForm() {\n    // Init Datepicker --- For more info, please check Flatpickr's official documentation: https://flatpickr.js.org/\n    $(\"#kt_datepicker_1\").flatpickr(); // Form validation\n\n    var validation;\n\n    var _form = document.getElementById('kt_project_settings_form');\n\n    var submitButton = _form.querySelector('#kt_project_settings_submit'); // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\n\n    validation = FormValidation.formValidation(_form, {\n      fields: {\n        name: {\n          validators: {\n            notEmpty: {\n              message: 'Project name is required'\n            }\n          }\n        },\n        type: {\n          validators: {\n            notEmpty: {\n              message: 'Project type is required'\n            }\n          }\n        },\n        description: {\n          validators: {\n            notEmpty: {\n              message: 'Project Description is required'\n            }\n          }\n        },\n        date: {\n          validators: {\n            notEmpty: {\n              message: 'Due Date is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        submitButton: new FormValidation.plugins.SubmitButton(),\n        //defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row'\n        })\n      }\n    });\n    submitButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      validation.validate().then(function (status) {\n        if (status == 'Valid') {\n          swal.fire({\n            text: \"Thank you! You've updated your project settings\",\n            icon: \"success\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn fw-bold btn-light-primary\"\n            }\n          });\n        } else {\n          swal.fire({\n            text: \"Sorry, looks like there are some errors detected, please try again.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn fw-bold btn-light-primary\"\n            }\n          });\n        }\n      });\n    });\n  }; // Public methods\n\n\n  return {\n    init: function init() {\n      handleForm();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTProjectSettings.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvcHJvamVjdHMvc2V0dGluZ3Mvc2V0dGluZ3MuanMuanMiLCJtYXBwaW5ncyI6IkNBRUE7O0FBQ0EsSUFBSUEsaUJBQWlCLEdBQUcsWUFBWTtFQUVoQztFQUNBLElBQUlDLFVBQVUsR0FBRyxTQUFiQSxVQUFhLEdBQVk7SUFDekI7SUFDQUMsQ0FBQyxDQUFDLGtCQUFELENBQUQsQ0FBc0JDLFNBQXRCLEdBRnlCLENBSXpCOztJQUNBLElBQUlDLFVBQUo7O0lBQ0EsSUFBSUMsS0FBSyxHQUFHQyxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsMEJBQXhCLENBQVo7O0lBQ0EsSUFBSUMsWUFBWSxHQUFHSCxLQUFLLENBQUNJLGFBQU4sQ0FBb0IsNkJBQXBCLENBQW5CLENBUHlCLENBU3pCOzs7SUFDQUwsVUFBVSxHQUFHTSxjQUFjLENBQUNDLGNBQWYsQ0FDVE4sS0FEUyxFQUVUO01BQ0lPLE1BQU0sRUFBRTtRQUNKQyxJQUFJLEVBQUU7VUFDRkMsVUFBVSxFQUFFO1lBQ1JDLFFBQVEsRUFBRTtjQUNOQyxPQUFPLEVBQUU7WUFESDtVQURGO1FBRFYsQ0FERjtRQVFKQyxJQUFJLEVBQUU7VUFDRkgsVUFBVSxFQUFFO1lBQ1JDLFFBQVEsRUFBRTtjQUNOQyxPQUFPLEVBQUU7WUFESDtVQURGO1FBRFYsQ0FSRjtRQWVKRSxXQUFXLEVBQUU7VUFDVEosVUFBVSxFQUFFO1lBQ1JDLFFBQVEsRUFBRTtjQUNOQyxPQUFPLEVBQUU7WUFESDtVQURGO1FBREgsQ0FmVDtRQXNCSkcsSUFBSSxFQUFFO1VBQ0ZMLFVBQVUsRUFBRTtZQUNSQyxRQUFRLEVBQUU7Y0FDTkMsT0FBTyxFQUFFO1lBREg7VUFERjtRQURWO01BdEJGLENBRFo7TUErQklJLE9BQU8sRUFBRTtRQUNMQyxPQUFPLEVBQUUsSUFBSVgsY0FBYyxDQUFDVSxPQUFmLENBQXVCRSxPQUEzQixFQURKO1FBRUxkLFlBQVksRUFBRSxJQUFJRSxjQUFjLENBQUNVLE9BQWYsQ0FBdUJHLFlBQTNCLEVBRlQ7UUFHTDtRQUNBQyxTQUFTLEVBQUUsSUFBSWQsY0FBYyxDQUFDVSxPQUFmLENBQXVCSyxVQUEzQixDQUFzQztVQUM3Q0MsV0FBVyxFQUFFO1FBRGdDLENBQXRDO01BSk47SUEvQmIsQ0FGUyxDQUFiO0lBNENBbEIsWUFBWSxDQUFDbUIsZ0JBQWIsQ0FBOEIsT0FBOUIsRUFBdUMsVUFBVUMsQ0FBVixFQUFhO01BQ2hEQSxDQUFDLENBQUNDLGNBQUY7TUFFQXpCLFVBQVUsQ0FBQzBCLFFBQVgsR0FBc0JDLElBQXRCLENBQTJCLFVBQVVDLE1BQVYsRUFBa0I7UUFDekMsSUFBSUEsTUFBTSxJQUFJLE9BQWQsRUFBdUI7VUFFbkJDLElBQUksQ0FBQ0MsSUFBTCxDQUFVO1lBQ05DLElBQUksRUFBRSxpREFEQTtZQUVOQyxJQUFJLEVBQUUsU0FGQTtZQUdOQyxjQUFjLEVBQUUsS0FIVjtZQUlOQyxpQkFBaUIsRUFBRSxhQUpiO1lBS05DLFdBQVcsRUFBRTtjQUNUQyxhQUFhLEVBQUU7WUFETjtVQUxQLENBQVY7UUFVSCxDQVpELE1BWU87VUFDSFAsSUFBSSxDQUFDQyxJQUFMLENBQVU7WUFDTkMsSUFBSSxFQUFFLHFFQURBO1lBRU5DLElBQUksRUFBRSxPQUZBO1lBR05DLGNBQWMsRUFBRSxLQUhWO1lBSU5DLGlCQUFpQixFQUFFLGFBSmI7WUFLTkMsV0FBVyxFQUFFO2NBQ1RDLGFBQWEsRUFBRTtZQUROO1VBTFAsQ0FBVjtRQVNIO01BQ0osQ0F4QkQ7SUF5QkgsQ0E1QkQ7RUE2QkgsQ0FuRkQsQ0FIZ0MsQ0F3RmhDOzs7RUFDQSxPQUFPO0lBQ0hDLElBQUksRUFBRSxnQkFBWTtNQUNkeEMsVUFBVTtJQUNiO0VBSEUsQ0FBUDtBQUtILENBOUZ1QixFQUF4QixDLENBaUdBOzs7QUFDQXlDLE1BQU0sQ0FBQ0Msa0JBQVAsQ0FBMEIsWUFBVztFQUNqQzNDLGlCQUFpQixDQUFDeUMsSUFBbEI7QUFDSCxDQUZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Fzc2V0cy9jb3JlL2pzL2N1c3RvbS9hcHBzL3Byb2plY3RzL3NldHRpbmdzL3NldHRpbmdzLmpzPzdjMzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVFByb2plY3RTZXR0aW5ncyA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAvLyBQcml2YXRlIGZ1bmN0aW9uc1xyXG4gICAgdmFyIGhhbmRsZUZvcm0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gSW5pdCBEYXRlcGlja2VyIC0tLSBGb3IgbW9yZSBpbmZvLCBwbGVhc2UgY2hlY2sgRmxhdHBpY2tyJ3Mgb2ZmaWNpYWwgZG9jdW1lbnRhdGlvbjogaHR0cHM6Ly9mbGF0cGlja3IuanMub3JnL1xyXG4gICAgICAgICQoXCIja3RfZGF0ZXBpY2tlcl8xXCIpLmZsYXRwaWNrcigpO1xyXG5cclxuICAgICAgICAvLyBGb3JtIHZhbGlkYXRpb25cclxuICAgICAgICB2YXIgdmFsaWRhdGlvbjtcclxuICAgICAgICB2YXIgX2Zvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfcHJvamVjdF9zZXR0aW5nc19mb3JtJyk7XHJcbiAgICAgICAgdmFyIHN1Ym1pdEJ1dHRvbiA9IF9mb3JtLnF1ZXJ5U2VsZWN0b3IoJyNrdF9wcm9qZWN0X3NldHRpbmdzX3N1Ym1pdCcpO1xyXG5cclxuICAgICAgICAvLyBJbml0IGZvcm0gdmFsaWRhdGlvbiBydWxlcy4gRm9yIG1vcmUgaW5mbyBjaGVjayB0aGUgRm9ybVZhbGlkYXRpb24gcGx1Z2luJ3Mgb2ZmaWNpYWwgZG9jdW1lbnRhdGlvbjpodHRwczovL2Zvcm12YWxpZGF0aW9uLmlvL1xyXG4gICAgICAgIHZhbGlkYXRpb24gPSBGb3JtVmFsaWRhdGlvbi5mb3JtVmFsaWRhdGlvbihcclxuICAgICAgICAgICAgX2Zvcm0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGZpZWxkczoge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90RW1wdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnUHJvamVjdCBuYW1lIGlzIHJlcXVpcmVkJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEVtcHR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1Byb2plY3QgdHlwZSBpcyByZXF1aXJlZCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90RW1wdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnUHJvamVjdCBEZXNjcmlwdGlvbiBpcyByZXF1aXJlZCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0ZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RFbXB0eToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdEdWUgRGF0ZSBpcyByZXF1aXJlZCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgcGx1Z2luczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHRyaWdnZXI6IG5ldyBGb3JtVmFsaWRhdGlvbi5wbHVnaW5zLlRyaWdnZXIoKSxcclxuICAgICAgICAgICAgICAgICAgICBzdWJtaXRCdXR0b246IG5ldyBGb3JtVmFsaWRhdGlvbi5wbHVnaW5zLlN1Ym1pdEJ1dHRvbigpLFxyXG4gICAgICAgICAgICAgICAgICAgIC8vZGVmYXVsdFN1Ym1pdDogbmV3IEZvcm1WYWxpZGF0aW9uLnBsdWdpbnMuRGVmYXVsdFN1Ym1pdCgpLCAvLyBVbmNvbW1lbnQgdGhpcyBsaW5lIHRvIGVuYWJsZSBub3JtYWwgYnV0dG9uIHN1Ym1pdCBhZnRlciBmb3JtIHZhbGlkYXRpb25cclxuICAgICAgICAgICAgICAgICAgICBib290c3RyYXA6IG5ldyBGb3JtVmFsaWRhdGlvbi5wbHVnaW5zLkJvb3RzdHJhcDUoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByb3dTZWxlY3RvcjogJy5mdi1yb3cnXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIHN1Ym1pdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICAgICAgIHZhbGlkYXRpb24udmFsaWRhdGUoKS50aGVuKGZ1bmN0aW9uIChzdGF0dXMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChzdGF0dXMgPT0gJ1ZhbGlkJykge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBzd2FsLmZpcmUoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBcIlRoYW5rIHlvdSEgWW91J3ZlIHVwZGF0ZWQgeW91ciBwcm9qZWN0IHNldHRpbmdzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb246IFwic3VjY2Vzc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBidXR0b25zU3R5bGluZzogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiBcIk9rLCBnb3QgaXQhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbUNsYXNzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uOiBcImJ0biBmdy1ib2xkIGJ0bi1saWdodC1wcmltYXJ5XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3dhbC5maXJlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogXCJTb3JyeSwgbG9va3MgbGlrZSB0aGVyZSBhcmUgc29tZSBlcnJvcnMgZGV0ZWN0ZWQsIHBsZWFzZSB0cnkgYWdhaW4uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb246IFwiZXJyb3JcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uc1N0eWxpbmc6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogXCJPaywgZ290IGl0IVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21DbGFzczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvbjogXCJidG4gZnctYm9sZCBidG4tbGlnaHQtcHJpbWFyeVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUHVibGljIG1ldGhvZHNcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBoYW5kbGVGb3JtKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KCk7XHJcblxyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbigpIHtcclxuICAgIEtUUHJvamVjdFNldHRpbmdzLmluaXQoKTtcclxufSk7XHJcbiJdLCJuYW1lcyI6WyJLVFByb2plY3RTZXR0aW5ncyIsImhhbmRsZUZvcm0iLCIkIiwiZmxhdHBpY2tyIiwidmFsaWRhdGlvbiIsIl9mb3JtIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInN1Ym1pdEJ1dHRvbiIsInF1ZXJ5U2VsZWN0b3IiLCJGb3JtVmFsaWRhdGlvbiIsImZvcm1WYWxpZGF0aW9uIiwiZmllbGRzIiwibmFtZSIsInZhbGlkYXRvcnMiLCJub3RFbXB0eSIsIm1lc3NhZ2UiLCJ0eXBlIiwiZGVzY3JpcHRpb24iLCJkYXRlIiwicGx1Z2lucyIsInRyaWdnZXIiLCJUcmlnZ2VyIiwiU3VibWl0QnV0dG9uIiwiYm9vdHN0cmFwIiwiQm9vdHN0cmFwNSIsInJvd1NlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInZhbGlkYXRlIiwidGhlbiIsInN0YXR1cyIsInN3YWwiLCJmaXJlIiwidGV4dCIsImljb24iLCJidXR0b25zU3R5bGluZyIsImNvbmZpcm1CdXR0b25UZXh0IiwiY3VzdG9tQ2xhc3MiLCJjb25maXJtQnV0dG9uIiwiaW5pdCIsIktUVXRpbCIsIm9uRE9NQ29udGVudExvYWRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/projects/settings/settings.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/projects/settings/settings.js"]();
/******/ 	
/******/ })()
;